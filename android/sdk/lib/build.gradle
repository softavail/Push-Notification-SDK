apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply from: 'publish-constants.gradle'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 33
    buildToolsVersion "33.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 5
        versionName mavenVersion

        multiDexEnabled true

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {
        scg(MavenPublication) {
            groupId mavenGroup
            artifactId mavenArtifact
            version mavenVersion
//            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/" + mavenArtifact + "-release.aar")

            // Add all dependencies into POM file, so when we include the library
            // with transitive dependencies all dependencies will be resolved
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each { dependency ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dependency.group)
                    dependencyNode.appendNode('artifactId', dependency.name)
                    dependencyNode.appendNode('version', dependency.version)
                }
            }
        }
    }

    //publish to filesystem repo
    repositories {
        mavenLocal()
    }
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'

    //retrofit
    implementation ('com.squareup.retrofit2:retrofit:2.9.0') {
        exclude group: 'com.squareup.okhttp3', module:'okhttp'
        exclude group: 'com.squareup.okhttp3', module:'mockwebserver'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'junit', module: 'junit'
    }
    implementation ('com.squareup.retrofit2:converter-gson:2.9.0') {
        exclude group: 'com.squareup.okhttp3', module:'okhttp'
        exclude group: 'com.squareup.okhttp3', module:'mockwebserver'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'junit', module: 'junit'
    }
    //OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    //Firebase
    implementation 'com.google.firebase:firebase-core:21.0.0'
    implementation "com.google.firebase:firebase-messaging:23.0.5"
    implementation 'com.google.android.gms:play-services-analytics:18.0.1'

    // Required for local unit tests (JUnit 4 framework)
    testImplementation 'junit:junit:4.12'

    // Required for instrumented tests
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    // Set this dependency to use JUnit 4 rules
    androidTestImplementation 'androidx.test:rules:1.1.1'
}

archivesBaseName = mavenArtifact
group = mavenGroup
version = mavenVersion

Properties properties = new Properties()
def propFile = project.rootProject.file('local.properties')
if (propFile.exists()) {
    properties.load(propFile.newDataInputStream())
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : properties.getProperty("bintrayUser")
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : properties.getProperty("bintrayApiKey")
    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayPackageName
        userOrg = bintrayUserOrg != '' ? bintrayUserOrg : user
        licenses = [bintrayLicense]
        vcsUrl = bintrayGitUrl
        version {
            name = mavenVersion
            desc = bintrayDesc
            vcsTag = bintrayVcsTag
        }
    }
}
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            group mavenGroup
//            artifactId mavenArtifact
//            version mavenVersion
//        }
//    }
//}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}
